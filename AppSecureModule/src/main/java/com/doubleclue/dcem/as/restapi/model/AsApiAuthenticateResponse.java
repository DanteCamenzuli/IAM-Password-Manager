/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.4.1
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.as.restapi.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.doubleclue.dcem.core.as.AuthMethod;
import com.doubleclue.dcem.core.as.AuthenticateResponse;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AsApiAuthenticateResponse
 */

public class AsApiAuthenticateResponse implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@JsonProperty("successful")
	private boolean successful = false;

	@JsonProperty("authMethods")
	private List<AsApiAuthMethod> authMethods = null;

	@JsonProperty("secureMsgId")
	private long secureMsgId = 0;

	@JsonProperty("secureMsgTimeToLive")
	private int secureMsgTimeToLive = 0;

	@JsonProperty("secureMsgRandomCode")
	String secureMsgRandomCode;

	@JsonProperty("phoneNumber")
	private String phoneNumber = null;

	@JsonProperty("sessionCookie")
	private String sessionCookie = null;

	@JsonProperty("sessionCookieExpiresOn")
	private int sessionCookieExpiresOn;

	@JsonProperty("fqUserLoginId")
	private String fqUserLoginId = null;

	@JsonProperty("fidoResponse")
	private String fidoResponse = null;

	public AsApiAuthenticateResponse() {
	}

	public AsApiAuthenticateResponse(AuthenticateResponse authenticateResponse) {
		this.successful = authenticateResponse.isSuccessful();
		this.secureMsgId = authenticateResponse.getSecureMsgId();
		this.secureMsgRandomCode = authenticateResponse.getSecureMsgRandomCode();
		this.secureMsgTimeToLive = authenticateResponse.getSecureMsgTimeToLive();
		this.phoneNumber = authenticateResponse.getPhoneNumber();
		this.sessionCookie = authenticateResponse.getSessionCookie();
		this.sessionCookieExpiresOn = authenticateResponse.getSessionCookieExpiresOn();
		this.fidoResponse = authenticateResponse.getFidoResponse();
		authMethods = new ArrayList<>(authenticateResponse.getAuthMethods().size());
		for (AuthMethod authMethod : authenticateResponse.getAuthMethods()) {
			authMethods.add(AsApiAuthMethod.fromValue(authMethod.name()));
		}
		fqUserLoginId = authenticateResponse.getFqUserLoginId();
		return;
	}

	/**
	 * Get successful
	 * @return successful
	 **/
	@JsonProperty("successful")
	public boolean isSuccessful() {
		return successful;
	}

	public void setSuccessful(boolean successful) {
		this.successful = successful;
	}

	public AsApiAuthenticateResponse autheMethods(List<AsApiAuthMethod> autheMethods) {
		this.authMethods = autheMethods;
		return this;
	}

	public AsApiAuthenticateResponse addAutheMethodsItem(AsApiAuthMethod autheMethodsItem) {
		if (this.authMethods == null) {
			this.authMethods = new ArrayList<AsApiAuthMethod>();
		}
		this.authMethods.add(autheMethodsItem);
		return this;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AsApiAuthenticateResponse asApiAuthenticateResponse = (AsApiAuthenticateResponse) o;
		return Objects.equals(this.successful, asApiAuthenticateResponse.successful)
				&& Objects.equals(this.authMethods, asApiAuthenticateResponse.authMethods);
	}

	@Override
	public int hashCode() {
		return Objects.hash(successful, authMethods);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiAuthenticateResponse {\n");
		sb.append("    successful: ").append(toIndentedString(successful)).append("\n");
		sb.append("    authMethods: ").append(toIndentedString(authMethods)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public List<AsApiAuthMethod> getAuthMethods() {
		return authMethods;
	}

	public void setAuthMethods(List<AsApiAuthMethod> authMethods) {
		this.authMethods = authMethods;
	}

	public long getSecureMsgId() {
		return secureMsgId;
	}

	public void setSecureMsgId(long secureMsgId) {
		this.secureMsgId = secureMsgId;
	}

	public int getSecureMsgTimeToLive() {
		return secureMsgTimeToLive;
	}

	public void setSecureMsgTimeToLive(int secureMsgTimeToLive) {
		this.secureMsgTimeToLive = secureMsgTimeToLive;
	}

	public String getSecureMsgRandomCode() {
		return secureMsgRandomCode;
	}

	public void setSecureMsgRandomCode(String secureMsgRandomCode) {
		this.secureMsgRandomCode = secureMsgRandomCode;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getSessionCookie() {
		return sessionCookie;
	}

	public void setSessionCookie(String sessionCookie) {
		this.sessionCookie = sessionCookie;
	}

	public int getSessionCookieExpiresOn() {
		return sessionCookieExpiresOn;
	}

	public void setSessionCookieExpiresOn(int sessionCookieExpiresOn) {
		this.sessionCookieExpiresOn = sessionCookieExpiresOn;
	}

	public String getFqUserLoginId() {
		return fqUserLoginId;
	}

	public void setFqUserLoginId(String fqUserLoginId) {
		this.fqUserLoginId = fqUserLoginId;
	}

	public String getFidoResponse() {
		return fidoResponse;
	}

	public void setFidoResponse(String fidoResponse) {
		this.fidoResponse = fidoResponse;
	}
}
