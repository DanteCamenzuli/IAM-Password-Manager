/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.5.0
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.as.restapi.model;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AsApiFidoAuthenticator
 */

public class AsApiFidoAuthenticator implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@JsonProperty("fidoAuthenticatorId")
	private int fidoAuthenticatorId = 0;

	@JsonProperty("userLoginId")
	private String userLoginId = null;

	@JsonProperty("registeredOn")
	private LocalDateTime registeredOn = null;

	@JsonProperty("lastUsed")
	private LocalDateTime lastUsed = null;

	@JsonProperty("displayName")
	private String displayName = null;

	public AsApiFidoAuthenticator fidoAuthenticatorId(int fidoAuthenticatorId) {
		this.fidoAuthenticatorId = fidoAuthenticatorId;
		return this;
	}

	/**
	 * Get fidoAuthenticatorId
	 * @return fidoAuthenticatorId
	 **/
	@JsonProperty("fidoAuthenticatorId")
	public int getFidoAuthenticatorId() {
		return fidoAuthenticatorId;
	}

	public void setFidoAuthenticatorId(int fidoAuthenticatorId) {
		this.fidoAuthenticatorId = fidoAuthenticatorId;
	}

	public AsApiFidoAuthenticator userLoginId(String userLoginId) {
		this.userLoginId = userLoginId;
		return this;
	}

	/**
	 * Get userLoginId
	 * @return userLoginId
	 **/
	@JsonProperty("userLoginId")
	public String getUserLoginId() {
		return userLoginId;
	}

	public void setUserLoginId(String userLoginId) {
		this.userLoginId = userLoginId;
	}

	public AsApiFidoAuthenticator registeredOn(LocalDateTime registeredOn) {
		this.registeredOn = registeredOn;
		return this;
	}

	/**
	 * Data Format is ISO-8601 (e.g. \&quot;2017-12-10T14:50:12.123+02:00\&quot;)
	 * @return registeredOn
	 **/
	@JsonProperty("registeredOn")
	public LocalDateTime getRegisteredOn() {
		return registeredOn;
	}

	public void setRegisteredOn(LocalDateTime registeredOn) {
		this.registeredOn = registeredOn;
	}

	public AsApiFidoAuthenticator lastUsed(LocalDateTime lastUsed) {
		this.lastUsed = lastUsed;
		return this;
	}

	/**
	 * Data Format is ISO-8601 (e.g. \&quot;2017-12-10T14:50:12.123+02:00\&quot;)
	 * @return lastUsed
	 **/
	@JsonProperty("lastUsed")
	public LocalDateTime getLastUsed() {
		return lastUsed;
	}

	public void setLastUsed(LocalDateTime lastUsed) {
		this.lastUsed = lastUsed;
	}

	public AsApiFidoAuthenticator displayName(String displayName) {
		this.displayName = displayName;
		return this;
	}

	/**
	 * Get displayName
	 * @return displayName
	 **/
	@JsonProperty("displayName")
	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AsApiFidoAuthenticator asApiFidoAuthenticator = (AsApiFidoAuthenticator) o;
		return Objects.equals(this.fidoAuthenticatorId, asApiFidoAuthenticator.fidoAuthenticatorId)
				&& Objects.equals(this.userLoginId, asApiFidoAuthenticator.userLoginId)
				&& Objects.equals(this.registeredOn, asApiFidoAuthenticator.registeredOn) && Objects.equals(this.lastUsed, asApiFidoAuthenticator.lastUsed)
				&& Objects.equals(this.displayName, asApiFidoAuthenticator.displayName);
	}

	@Override
	public int hashCode() {
		return Objects.hash(fidoAuthenticatorId, userLoginId, registeredOn, lastUsed, displayName);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiFidoAuthenticator {\n");

		sb.append("    fidoAuthenticatorId: ").append(toIndentedString(fidoAuthenticatorId)).append("\n");
		sb.append("    userLoginId: ").append(toIndentedString(userLoginId)).append("\n");
		sb.append("    registeredOn: ").append(toIndentedString(registeredOn)).append("\n");
		sb.append("    lastUsed: ").append(toIndentedString(lastUsed)).append("\n");
		sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
