/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.5.0
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.as.restapi.model;

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * AsApiDevice
 */

public class AsApiDevice implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@JsonProperty("deviceId")
	private int deviceId;

	@JsonProperty("userloginId")
	private String userloginId = null;

	@JsonProperty("name")
	private String name = null;

	/**
	 * Gets or Sets clientType
	 */
	public enum ClientTypeEnum {
		ANDROID("ANDROID"),

		I_OS("I_OS"),

		WINDOWS("WINDOWS"),

		MAC("MAC"),

		LINUX("LINUX");

		private String value;

		ClientTypeEnum(String value) {
			this.value = value;
		}

		@Override
		@JsonValue
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static ClientTypeEnum fromValue(String text) {
			for (ClientTypeEnum b : ClientTypeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}
	}

	@JsonProperty("clientType")
	private ClientTypeEnum clientType = null;

	/**
	 * Gets or Sets state
	 */
	public enum StateEnum {
		Enabled("Enabled"),

		Disabled("Disabled"),

		TempLocked("Disabled");

		private String value;

		StateEnum(String value) {
			this.value = value;
		}

		@Override
		@JsonValue
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static StateEnum fromValue(String text) {
			for (StateEnum b : StateEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}
	}

	@JsonProperty("state")
	private StateEnum state = null;

	@JsonProperty("online")
	private boolean online;

	@JsonProperty("lastTimeLogin")
	private Date lastTimeLogin = null;

	@JsonProperty("deleted")
	private boolean deleted = false;

	public AsApiDevice deviceId(int deviceId) {
		this.deviceId = deviceId;
		return this;
	}

	/**
	 * Get deviceId
	 * @return deviceId
	 **/
	@JsonProperty("deviceId")
	public int getDeviceId() {
		return deviceId;
	}

	public void setDeviceId(int deviceId) {
		this.deviceId = deviceId;
	}

	public AsApiDevice userloginId(String userloginId) {
		this.userloginId = userloginId;
		return this;
	}

	/**
	 * Get userloginId
	 * @return userloginId
	 **/
	@JsonProperty("userloginId")
	public String getUserloginId() {
		return userloginId;
	}

	public void setUserloginId(String userloginId) {
		this.userloginId = userloginId;
	}

	public AsApiDevice name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 * @return name
	 **/
	@JsonProperty("name")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public AsApiDevice clientType(ClientTypeEnum clientType) {
		this.clientType = clientType;
		return this;
	}

	/**
	 * Get clientType
	 * @return clientType
	 **/
	@JsonProperty("clientType")
	public ClientTypeEnum getClientType() {
		return clientType;
	}

	public void setClientType(ClientTypeEnum clientType) {
		this.clientType = clientType;
	}

	public AsApiDevice state(StateEnum state) {
		this.state = state;
		return this;
	}

	/**
	 * Get state
	 * @return state
	 **/
	@JsonProperty("state")
	public StateEnum getState() {
		return state;
	}

	public void setState(StateEnum state) {
		this.state = state;
	}

	public AsApiDevice online(boolean online) {
		this.online = online;
		return this;
	}

	/**
	 * This flag is true if device is on
	 * @return online
	 **/
	@JsonProperty("online")
	public boolean isOnline() {
		return online;
	}

	public void setOnline(boolean online) {
		this.online = online;
	}

	public AsApiDevice lastTimeLogin(Date lastTimeLogin) {
		this.lastTimeLogin = lastTimeLogin;
		return this;
	}

	/**
	 * Data Format is ISO-8601 (e.g. \&quot;2017-12-10T14:50:12.123+02:00\&quot;)
	 * @return lastTimeLogin
	 **/
	@JsonProperty("lastTimeLogin")
	public Date getLastTimeLogin() {
		return lastTimeLogin;
	}

	public void setLastTimeLogin(Date lastTimeLogin) {
		this.lastTimeLogin = lastTimeLogin;
	}

	public AsApiDevice deleted(boolean deleted) {
		this.deleted = deleted;
		return this;
	}

	/**
	 * Get deleted
	 * @return deleted
	 **/
	@JsonProperty("deleted")
	public boolean isDeleted() {
		return deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AsApiDevice asApiDevice = (AsApiDevice) o;
		return Objects.equals(this.deviceId, asApiDevice.deviceId) && Objects.equals(this.userloginId, asApiDevice.userloginId)
				&& Objects.equals(this.name, asApiDevice.name) && Objects.equals(this.clientType, asApiDevice.clientType)
				&& Objects.equals(this.state, asApiDevice.state) && Objects.equals(this.online, asApiDevice.online)
				&& Objects.equals(this.lastTimeLogin, asApiDevice.lastTimeLogin) && Objects.equals(this.deleted, asApiDevice.deleted);
	}

	@Override
	public int hashCode() {
		return Objects.hash(deviceId, userloginId, name, clientType, state, online, lastTimeLogin, deleted);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiDevice {\n");

		sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
		sb.append("    userloginId: ").append(toIndentedString(userloginId)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
		sb.append("    state: ").append(toIndentedString(state)).append("\n");
		sb.append("    online: ").append(toIndentedString(online)).append("\n");
		sb.append("    lastTimeLogin: ").append(toIndentedString(lastTimeLogin)).append("\n");
		sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
