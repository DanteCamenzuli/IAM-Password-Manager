/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.5.0
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.as.restapi.model;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Objects;

import com.doubleclue.dcem.as.entities.CloudSafeEntity;
import com.doubleclue.dcem.core.exceptions.DcemException;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * AsApiCloudSafeFile
 */

public class AsApiCloudSafeFile implements Serializable {
	private static final long serialVersionUID = 1L;

	@JsonProperty("id")
	private int id = 0;

	/**
	 * Gets or Sets owner
	 */
	public enum OwnerEnum {
		GLOBAL("GLOBAL"),

		USER("USER"),

		DEVICE("DEVICE");

		private String value;

		OwnerEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static OwnerEnum fromValue(String text) {
			for (OwnerEnum b : OwnerEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}
	}

	@JsonProperty("owner")
	private OwnerEnum owner = null;

	@JsonProperty("name")
	private String name = null;

	@JsonProperty("userLoginId")
	private String userLoginId = null;

	@JsonProperty("deviceName")
	private String deviceName = null;

	@JsonProperty("content")
	private byte[] content = null;

	@JsonProperty("length")
	private long length = 0;

	@JsonProperty("lastModified")
	private LocalDateTime lastModified = null;

	@JsonProperty("discardAfter")
	private LocalDateTime discardAfter = null;

	@JsonProperty("options")
	private String options = null;

	@JsonProperty("signed")
	private boolean signed = false;

	@JsonProperty("password")
	private String password = null;

	public AsApiCloudSafeFile() {

	}

	public AsApiCloudSafeFile(CloudSafeEntity cloudDataEntity) throws DcemException {
		this.id = cloudDataEntity.getId();
		owner = OwnerEnum.valueOf(cloudDataEntity.getOwner().name());
		name = cloudDataEntity.getName();
		switch (owner) {
		case USER:
			userLoginId = cloudDataEntity.getUser().getLoginId();
			break;

		case DEVICE:
			userLoginId = cloudDataEntity.getUser().getLoginId();
			deviceName = cloudDataEntity.getDevice().getName();
			break;
		default:
			break;
		}
		lastModified = cloudDataEntity.getLastModified();
		discardAfter = cloudDataEntity.getDiscardAfter();
		options = cloudDataEntity.getOptions();
		length = cloudDataEntity.getLength();
	}

	public AsApiCloudSafeFile id(int id) {
		this.id = id;
		return this;
	}

	/**
	* this is the database primary key of the object. Zero means unknown id else DCEM will use this to read, read or delete the file
	* @return id
	**/
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	/**
	* Get owner
	* @return owner
	**/
	public OwnerEnum getOwner() {
		return owner;
	}

	public void setOwner(OwnerEnum owner) {
		this.owner = owner;
	}

	/**
	* Get name
	* @return name
	**/
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	* this is the user login id. It must be set if owner is USER or DEVICE
	* @return userLoginId
	**/
	public String getUserLoginId() {
		return userLoginId;
	}

	public void setUserLoginId(String userLoginId) {
		this.userLoginId = userLoginId;
	}

	/**
	* if owner is DEVICE, this must be the user&#39;s unique deviceName
	* @return deviceName
	**/
	public String getDeviceName() {
		return deviceName;
	}

	public void setDeviceName(String deviceName) {
		this.deviceName = deviceName;
	}

	/**
	* Content is null when retrived from queryCloudStorage. Use getCloudStorge to get the content
	* @return content
	**/
	public byte[] getContent() {
		return content;
	}

	public void setContent(byte[] content) {
		this.content = content;
	}

	

	/**
	* Data Format is ISO-8601 (e.g. \&quot;2017-12-10T14:50:12.123+02:00\&quot;)
	* @return lastModified
	**/
	public LocalDateTime getLastModified() {
		return lastModified;
	}

	public void setLastModified(LocalDateTime lastModified) {
		this.lastModified = lastModified;
	}

	/**
	* Data Format is ISO-8601 (e.g. \&quot;2017-12-10T14:50:12.123+02:00\&quot;)
	* @return discardAfter
	**/
	public LocalDateTime getDiscardAfter() {
		return discardAfter;
	}

	public void setDiscardAfter(LocalDateTime discardAfter) {
		this.discardAfter = discardAfter;
	}

	/**
	* not yet specified. Just let it null for the time being
	* @return options
	**/
	public String getOptions() {
		return options;
	}

	public void setOptions(String options) {
		this.options = options;
	}

	/**
	* if true, user/device did digitally sign this content
	* @return signed
	**/
	public boolean isSigned() {
		return signed;
	}

	public void setSigned(boolean signed) {
		this.signed = signed;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AsApiCloudSafeFile asApiCloudSafeFile = (AsApiCloudSafeFile) o;
		return Objects.equals(this.id, asApiCloudSafeFile.id) && Objects.equals(this.owner, asApiCloudSafeFile.owner)
				&& Objects.equals(this.name, asApiCloudSafeFile.name) && Objects.equals(this.userLoginId, asApiCloudSafeFile.userLoginId)
				&& Objects.equals(this.deviceName, asApiCloudSafeFile.deviceName) && Objects.equals(this.length, asApiCloudSafeFile.length)
				&& Objects.equals(this.lastModified, asApiCloudSafeFile.lastModified) && Objects.equals(this.discardAfter, asApiCloudSafeFile.discardAfter)
				&& Objects.equals(this.options, asApiCloudSafeFile.options) && Objects.equals(this.signed, asApiCloudSafeFile.signed);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, owner, name, userLoginId, deviceName, length, lastModified, discardAfter, options, signed);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiCloudSafeFile {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    userLoginId: ").append(toIndentedString(userLoginId)).append("\n");
		sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
		sb.append("    length: ").append(toIndentedString(length)).append("\n");
		sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
		sb.append("    discardAfter: ").append(toIndentedString(discardAfter)).append("\n");
		sb.append("    options: ").append(toIndentedString(options)).append("\n");
		sb.append("    signed: ").append(toIndentedString(signed)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public long getLength() {
		return length;
	}

	public void setLength(long length) {
		this.length = length;
	}

}
