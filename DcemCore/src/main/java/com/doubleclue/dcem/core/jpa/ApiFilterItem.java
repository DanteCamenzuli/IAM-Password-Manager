/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.5.0
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.core.jpa;

import java.io.Serializable;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * AsApiFilterItem
 */

public class ApiFilterItem implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@JsonProperty("name")
	private String name = null;

	@JsonProperty("value")
	private String value = null;
	
	@JsonProperty("valueTo")
	private String valueTo = null;
	
	@JsonProperty("sortOrder")
	private SortOrderEnum sortOrder = SortOrderEnum.UNSORTED;

	public ApiFilterItem() {

	}
	
	public ApiFilterItem(String name, String value, OperatorEnum operator) {
		super();
		this.name = name;
		this.value = value;
		this.operator = operator;
	}

	public ApiFilterItem(String name, String value, SortOrderEnum sortOrder, OperatorEnum operator) {
		super();
		this.name = name;
		this.value = value;
//		this.value = value.toLowerCase();
		this.sortOrder = sortOrder;
		this.operator = operator;
	}
	
	public ApiFilterItem(String name, String value, String valueTo, SortOrderEnum sortOrder, OperatorEnum operator) {
		super();
		this.name = name;
		this.value = value;
		this.valueTo = valueTo;
		this.sortOrder = sortOrder;
		this.operator = operator;
	}

	/**
	   * Gets or Sets sortOrder
	   */
	public enum SortOrderEnum {
		UNSORTED("UNSORTED"),

		ASCENDING("ASCENDING"),

		DESCENDING("DESCENDING");

		private String value;

		SortOrderEnum(String value) {
			this.value = value;
		}

		@Override
		@JsonValue
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static SortOrderEnum fromValue(String text) {
			for (SortOrderEnum b : SortOrderEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}
	}



	/**
	   * Gets or Sets operator
	   */
	  public enum OperatorEnum {
	    EQUALS("EQUALS"),
	    LIKE("LIKE"),
	    GREATER("GREATER"),
	    LESSER("LESSER"),
	    NOT_EQUALS("NOT_EQUALS"),
	    BETWEEN("BETWEEN"),
	    NONE("NONE");

	    private String value;

	    OperatorEnum(String value) {
	      this.value = value;
	    }

	    @Override
	    @JsonValue
	    public String toString() {
	      return String.valueOf(value);
	    }

	    @JsonCreator
	    public static OperatorEnum fromValue(String value) {
	      for (OperatorEnum b : OperatorEnum.values()) {
	        if (b.value.equals(value)) {
	          return b;
	        }
	      }
	      throw new IllegalArgumentException("Unexpected value '" + value + "'");
	    }
	  }

	@JsonProperty("operator")
	private OperatorEnum operator = null;

	public ApiFilterItem name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * This muss be the exact name of the column variable
	 * @return name
	 **/
	@JsonProperty("name")
	@NotNull
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ApiFilterItem value(String value) {
		this.value = value;
		return this;
	}

	/**
	 * Ths value have to be deserialzed
	 * @return value
	 **/
	@JsonProperty("value")
	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	public ApiFilterItem sortOrder(SortOrderEnum sortOrder) {
		this.sortOrder = sortOrder;
		return this;
	}

	/**
	 * Get sortOrder
	 * @return sortOrder
	 **/
	@JsonProperty("sortOrder")
	public SortOrderEnum getSortOrder() {
		return sortOrder;
	}

	public void setSortOrder(SortOrderEnum sortOrder) {
		this.sortOrder = sortOrder;
	}

	public ApiFilterItem operator(OperatorEnum operator) {
		this.operator = operator;
		return this;
	}

	/**
	 * Get operator
	 * @return operator
	 **/
	@JsonProperty("operator")
	public OperatorEnum getOperator() {
		return operator;
	}

	public void setOperator(OperatorEnum operator) {
		this.operator = operator;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ApiFilterItem asApiFilterItem = (ApiFilterItem) o;
		return Objects.equals(this.name, asApiFilterItem.name) && Objects.equals(this.value, asApiFilterItem.value)
				&& Objects.equals(this.sortOrder, asApiFilterItem.sortOrder) && Objects.equals(this.operator, asApiFilterItem.operator);
	}

	@Override
	public int hashCode() {
		return Objects.hash(name, value, sortOrder, operator);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiFilterItem {\n");

		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    value: ").append(toIndentedString(value)).append("\n");
		sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
		sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public String getValueTo() {
		return valueTo;
	}

	public void setValueTo(String valueTo) {
		this.valueTo = valueTo;
	}
}
