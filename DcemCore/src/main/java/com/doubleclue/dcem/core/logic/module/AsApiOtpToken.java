/*
 * DoubleClue REST API
 * DoubleClue URL http://yourhost:8001/dcem/restApi/as
 *
 * OpenAPI spec version: 1.5.0
 * Contact: emanuel.galea@hws-gruppe.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.doubleclue.dcem.core.logic.module;

import java.io.Serializable;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AsApiOtpToken
 */

public class AsApiOtpToken implements Serializable {
	
	@JsonProperty("otpId")
	private int otpId;

	@JsonProperty("otpType")
	private AsApiOtpType otpType = null;

	@JsonProperty("serialNumber")
	private String serialNumber = null;

	@JsonProperty("assignedTo")
	private String assignedTo = null;

	@JsonProperty("disabled")
	private boolean disabled;

	@JsonProperty("info")
	private String info = null;

	@JsonIgnore
	private byte[] secretKey = null;

	public AsApiOtpToken otpId(int otpId) {
		this.otpId = otpId;
		return this;
	}

	/**
	 * Get otpId
	 * 
	 * @return otpId
	 **/
	@JsonProperty("otpId")
	public int getOtpId() {
		return otpId;
	}

	public void setOtpId(int otpId) {
		this.otpId = otpId;
	}

	public AsApiOtpToken otpType(AsApiOtpType otpType) {
		this.otpType = otpType;
		return this;
	}

	/**
	 * Get otpType
	 * 
	 * @return otpType
	 **/
	@JsonProperty("otpType")
	public AsApiOtpType getOtpType() {
		return otpType;
	}

	public void setOtpType(AsApiOtpType otpType) {
		this.otpType = otpType;
	}

	/**
	 * The Serial Number of the OTP-Token
	 * 
	 * @return serialNumber
	 **/
	@JsonProperty("serialNumber")
	public String getSerialNumber() {
		return serialNumber;
	}

	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	/**
	 * The user login-Id. Null if token is not assigned
	 * 
	 * @return assignedTo
	 **/
	@JsonProperty("assignedTo")
	public String getAssignedTo() {
		return assignedTo;
	}

	public void setAssignedTo(String assignedTo) {
		this.assignedTo = assignedTo;
	}

	/**
	 * Get disabled
	 * 
	 * @return disabled
	 **/
	@JsonProperty("disabled")
	public boolean isDisabled() {
		return disabled;
	}

	public void setDisabled(boolean disabled) {
		this.disabled = disabled;
	}

	/**
	 * Get info
	 * 
	 * @return info
	 **/
	@JsonProperty("info")
	public String getInfo() {
		return info;
	}

	public void setInfo(String info) {
		this.info = info;
	}

	public byte[] getSecretKey() {
		return secretKey;
	}

	public void setSecretKey(byte[] secretKey) {
		this.secretKey = secretKey;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		AsApiOtpToken asApiOtpToken = (AsApiOtpToken) o;
		return Objects.equals(this.otpId, asApiOtpToken.otpId) && Objects.equals(this.otpType, asApiOtpToken.otpType)
				&& Objects.equals(this.serialNumber, asApiOtpToken.serialNumber)
				&& Objects.equals(this.assignedTo, asApiOtpToken.assignedTo)
				&& Objects.equals(this.disabled, asApiOtpToken.disabled)
				&& Objects.equals(this.info, asApiOtpToken.info);
	}

	@Override
	public int hashCode() {
		return Objects.hash(otpId, otpType, serialNumber, assignedTo, disabled, info);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class AsApiOtpToken {\n");

		sb.append("    otpId: ").append(toIndentedString(otpId)).append("\n");
		sb.append("    otpType: ").append(toIndentedString(otpType)).append("\n");
		sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
		sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
		sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
		sb.append("    info: ").append(toIndentedString(info)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
