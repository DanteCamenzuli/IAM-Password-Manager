//
// Autogenerated by Thrift Compiler (0.13.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
import Int64 = require('node-int64');


export declare enum CloudSafeOptions {
  ENC = 0,
  PWD = 1,
}

export declare enum AppErrorCodes {
  OK = 0,
  WRONG_CREDENTIALS = 1,
  INVALID_ACTIVATION_CODE = 2,
  ACTIVATION_CODE_EXPIRED = 3,
  USER_PASSWORD_MAX_RETRIES = 4,
  UNKNOWN_CLIENT_TYPE = 5,
  UNKNOWN_ARCH_TYPE = 6,
  REJECT_RISK = 7,
  UPDATE_NECESSARY = 8,
  INVALID_USERID = 9,
  UNEXPECTED_ERROR = 10,
  INVALID_VERSION = 11,
  INVALID_PIN = 12,
  CSR_SIGNATURE = 13,
  CSR_ERROR = 14,
  TRANSPORT_ERROR = 15,
  USER_DISABLED = 16,
  USER_TEMPORARY_DISABLED = 17,
  INVALID_DEVICE_NAME = 18,
  INVALID_DEVICE_ID = 19,
  DEVICE_DISABLED = 20,
  INCORRECT_STATE = 21,
  INVALID_UDID = 22,
  INVALID_CLIENT_SIGNATURE = 23,
  NO_TEMPLATE_FOUND = 24,
  RESPONSE_MESSAGE_ERROR = 25,
  CLIENT_ERROR = 26,
  RESPONSE_MESSAGE_INVALID_ID = 27,
  INVALID_PASSWORD = 28,
  DUPLICATED_DEVICE_NAME = 29,
  REST_ADD_MESSAGE_FAILURE = 30,
  APP_MSG_RESPONSE_TIMEDOUT = 31,
  INVALID_MESSAGE_SIGNATURE = 32,
  PROPERTY_NOT_FOUND = 33,
  VERSION_UPDATED_REQUIRED = 34,
  VERSION_DISABLED = 35,
  FCM_PUSHNOTIFICATION = 36,
  INVALID_CLOUD_SAFE_SIGNATURE = 37,
  CLOUD_SAFE_NOT_FOUND = 38,
  LICENCE_EXPIRED = 39,
  LICENCE_MAX_USER = 40,
  INVALID_DOMAIN_NAME = 41,
  DISPATCHER_CONNECTION_TO_DCEM_FAILED = 42,
  CONNECTION_TO_LDAP_FAILED = 43,
  UNREGISTERED_DCEM = 44,
  NO_CONNECTION_TO_DESTINATION_DCEM = 45,
  NOT_A_DISPATCHER_PROXY = 46,
  DOMAIN_CANNOT_CONNECT_TO_ITSELF = 47,
  DOMAIN_HAS_NO_CONFIGURATION = 48,
  REVERSE_PROXY_CONNECTION_LIMIT = 49,
  INVALID_DEVICE_KEY = 50,
  INVALID_OFFLINE_KEY = 51,
  USER_HAS_NO_DEVICES = 52,
  NO_DISTINCT_USER_NAME = 53,
  INVALID_PASSCODE = 54,
  PASSCODE_NOT_NUMERIC = 55,
  INVALID_AUTH_METHOD = 56,
  AUTH_METHOD_NOT_ALLOWED = 57,
  NO_AUTH_METHOD_FOUND = 58,
  SMS_USER_HAS_NO_MOBILE = 59,
  SMS_SEND_EXCEPTION = 60,
  SEND_VOICE_EXCEPTION = 61,
  INVALID_OTP = 62,
  USER_HAS_NO_OTP_TOKENS = 63,
  INVALID_TENANT_IDENTIFIER = 64,
  USER_HAS_NO_TELEPHONE_OR_MOBILE = 65,
  INVALID_CLOUD_SAFE_OWNER = 66,
  APP_MSG_IGNORED = 67,
  DB_DECRYTION_ERROR = 68,
  NO_WRITE_ACCESS = 69,
  REVERSE_PROXY_REDIRECTION = 70,
  PASSWORD_SAFE_LIMIT_REACHED = 71,
  CLOUD_SAFE_LIMIT_REACHED = 72,
  PASSWORD_SAFE_NOT_ENABLED = 73,
  CLOUD_SAFE_GLOBAL_LIMIT_REACHED = 74,
  CLOUD_SAFE_USER_LIMIT_REACHED = 75,
  CLOUD_SAFE_USER_EXPIRY_DATE_REACHED = 76,
  CLOUD_SAFE_FILE_DECRYPTION = 77,
  LICENCE_MAX_USERS_REACHED = 78,
  LICENCE_MAX_GLOBAL_USERS_REACHED = 79,
  INVALID_FILE_SAFE_OWNER = 80,
  CLOUDDATA_OUT_OF_DATE = 81,
}

export declare enum CommClientType {
  APP = 1,
  DCEM_AS_CLIENT = 2,
  AUTH_APP = 3,
}

export declare enum MsgPriority {
  IMMEDIATE = 1,
  URGENT = 2,
  HIGH = 3,
  NORAML = 4,
  LOW = 5,
  NEGLIGIBLE = 6,
  NONE = 7,
}

export declare enum ThriftAuthMethod {
  AUTO = -1,
  PASSWORD = 0,
  SMS = 1,
  VOICE_MESSAGE = 2,
  HARDWARE_TOKEN = 3,
  DOUBLECLUE_PASSCODE = 4,
  PUSH_APPROVAL = 5,
  QRCODE_APPROVAL = 6,
  SESSION_RECONNECT = 7,
  FIDO_U2F = 8,
}

export declare enum ClientType {
  ANDROID = 0,
  I_OS = 1,
  WINDOWS = 2,
  MAC = 3,
  Linux = 4,
}

export declare enum CpuArch {
  unknown = 0,
  x86 = 1,
  asm = 2,
}

export declare enum CloudSafeOwner {
  GLOBAL = 0,
  USER = 1,
  DEVICE = 2,
}

export declare class AppException extends Thrift.TException {
  error: string;
  info: string;

    constructor(args?: { error: string; info: string; });
}

export declare class SdkConfig {
  connectionKey: string;
  serverUrl: string;
  transportProtocol: string;
  serverPublicKey: string;
  portalUrl: string;

    constructor(args?: { connectionKey: string; serverUrl: string; transportProtocol: string; serverPublicKey: string; portalUrl?: string; });
}

export declare class AuthGatewayConfig {
  name: string;
  sharedSecret: string;
  tenantName: string;

    constructor(args?: { name: string; sharedSecret: string; tenantName: string; });
}

export declare class SdkSettings {
  deviceId: number;
  userId: string;
  deviceName: string;
  privateKey: string;
  publicKey: string;
  offlineKey: string;
  passcodeValidFor: number;
  safe: { [k: string]: string; };

    constructor(args?: { deviceId: number; userId: string; deviceName: string; privateKey: string; publicKey: string; offlineKey: string; passcodeValidFor: number; safe: { [k: string]: string; }; });
}

export declare class MsgAttachment {
  id: Int64;
  name: string;
  mimeType: string;
  size: number;

    constructor(args?: { id: Int64; name: string; mimeType: string; size: number; });
}

export declare class AppMessage {
  id: Int64;
  priority: MsgPriority;
  templateId: number;
  signitureRequired: boolean;
  responseRequired: boolean;
  responseTime: number;
  responseTo: Int64;
  data: { [k: string]: string; };

    constructor(args?: { id: Int64; priority: MsgPriority; templateId: number; signitureRequired: boolean; responseRequired: boolean; responseTime: number; responseTo: Int64; data: { [k: string]: string; }; });
}

export declare class AppMessageResponse {
  id: Int64;
  actionId: string;
  errorCode: AppErrorCodes;
  errorMessage: string;
  read: boolean;
  responseData: { [k: string]: string; };
  signature: string;

    constructor(args?: { id: Int64; actionId: string; errorCode: AppErrorCodes; errorMessage: string; read: boolean; responseData: { [k: string]: string; }; signature?: string; });
}

export declare class AuthAppMessageResponse {
  succesful: boolean;
  errorCode: string;
  errorMessage: string;
  userKey: string;
  sessionCookieExpiresOn: number;
  sessionCookie: string;
  msgId: Int64;

    constructor(args?: { succesful: boolean; errorCode?: string; errorMessage?: string; userKey: string; sessionCookieExpiresOn: number; sessionCookie: string; msgId: Int64; });
}

export declare class AppVersion {
  version: number;
  name: string;
  state: string;

    constructor(args?: { version: number; name: string; state: string; });
}

export declare class Template {
  id: number;
  name: string;
  locale: string;
  content: string;

    constructor(args?: { id: number; name: string; locale: string; content?: string; });
}

export declare class SdkCloudSafeKey {
  owner: CloudSafeOwner;
  name: string;

    constructor(args?: { owner: CloudSafeOwner; name: string; });
}

export declare class SdkCloudSafe {
  uniqueKey: SdkCloudSafeKey;
  content: string;
  options: string;
  discardAfter: Int64;
  lastModified: Int64;
  signature: string;
  length: Int64;
  sharedUser: string;
  writeAccess: boolean;

    constructor(args?: { uniqueKey: SdkCloudSafeKey; content: string; options: string; discardAfter: Int64; lastModified: Int64; signature: string; length: Int64; sharedUser: string; writeAccess: boolean; });
}

export declare class User {
  loginId: string;
  updatePushNotification: boolean;
  usingReverseProxy: boolean;

    constructor(args?: { loginId: string; updatePushNotification: boolean; usingReverseProxy: boolean; });
}

export declare class ActivatedUsers {
  users: User[];

    constructor(args?: { users: User[]; });
}

export declare class RpOpen {
  remoteAddress: string;
  appVersion: AppVersion;
  libVersion: AppVersion;
  tenantName: string;

    constructor(args?: { remoteAddress: string; appVersion: AppVersion; libVersion: AppVersion; tenantName: string; });
}

export declare class AppAccount {
  name: string;
  userName: string;
  tenantName: string;
  realmName: string;
  fullQualifiedName: string;
  updatePushNotification: boolean;
  usingReverseProxy: boolean;
  settingsFileName: string;

    constructor(args?: { name: string; userName: string; tenantName: string; realmName: string; fullQualifiedName: string; updatePushNotification: boolean; usingReverseProxy: boolean; settingsFileName: string; });
}

export declare class AppAccounts {
  accounts: AppAccount[];

    constructor(args?: { accounts: AppAccount[]; });
}

export declare class ProxyOpenParam {
  handle: Int64;
  ipHost: string;
  port: number;
  secure: boolean;
  verifyCertificate: boolean;
  dataWait: number;

    constructor(args?: { handle: Int64; ipHost: string; port: number; secure: boolean; verifyCertificate: boolean; dataWait: number; });
}

export declare var PROTOCOL_VERSION: any;

export declare var PROTOCOL_APP_TO_SERVER: any;

export declare var PROTOCOL_SERVER_TO_APP: any;

export declare var PROTOCOL_REVERSE_PROXY: any;

export declare var REVERSE_PROXY_OPEN: any;

export declare var REVERSE_PROXY_CLOSE: any;

export declare var REVERSE_PROXY_DATA: any;

export declare var SIGNATURE_STRING: string;

export declare var DcemFileName: string;

export declare var SdkConfigFileName: string;

export declare var SignatureFileName: string;

export declare var TrustStoreFileName: string;

export declare var AuthConnectorFileName: string;

export declare var UserFullQualifiedId: string;

export declare var PasswordLessLogin: string;

export declare var PushNotificationTitle: string;

export declare var PushNotificationBody: string;

export declare var PushNotificationAction: string;

export declare var TENANT_SEPERATOR: string;

export declare var REALM_SEPERATOR: string;

export declare var PUSH_NOTIFICATION_TOKEN: string;

export declare var UNLOCK_USER_AUTH: string;

export declare var TRUE_VALUE: string;
