/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class SdkCloudSafe : TBase
{
  private SdkCloudSafeKey _uniqueKey;
  private byte[] _content;
  private string _options;
  private long _discardAfter;
  private long _lastModified;
  private byte[] _signature;
  private long _length;
  private string _sharedUser;
  private bool _writeAccess;
  private bool _restictDownload;

  public SdkCloudSafeKey UniqueKey
  {
    get
    {
      return _uniqueKey;
    }
    set
    {
      __isset.uniqueKey = true;
      this._uniqueKey = value;
    }
  }

  public byte[] Content
  {
    get
    {
      return _content;
    }
    set
    {
      __isset.content = true;
      this._content = value;
    }
  }

  public string Options
  {
    get
    {
      return _options;
    }
    set
    {
      __isset.options = true;
      this._options = value;
    }
  }

  public long DiscardAfter
  {
    get
    {
      return _discardAfter;
    }
    set
    {
      __isset.discardAfter = true;
      this._discardAfter = value;
    }
  }

  public long LastModified
  {
    get
    {
      return _lastModified;
    }
    set
    {
      __isset.lastModified = true;
      this._lastModified = value;
    }
  }

  public byte[] Signature
  {
    get
    {
      return _signature;
    }
    set
    {
      __isset.signature = true;
      this._signature = value;
    }
  }

  public long Length
  {
    get
    {
      return _length;
    }
    set
    {
      __isset.length = true;
      this._length = value;
    }
  }

  public string SharedUser
  {
    get
    {
      return _sharedUser;
    }
    set
    {
      __isset.sharedUser = true;
      this._sharedUser = value;
    }
  }

  public bool WriteAccess
  {
    get
    {
      return _writeAccess;
    }
    set
    {
      __isset.writeAccess = true;
      this._writeAccess = value;
    }
  }

  public bool RestictDownload
  {
    get
    {
      return _restictDownload;
    }
    set
    {
      __isset.restictDownload = true;
      this._restictDownload = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool uniqueKey;
    public bool content;
    public bool options;
    public bool discardAfter;
    public bool lastModified;
    public bool signature;
    public bool length;
    public bool sharedUser;
    public bool writeAccess;
    public bool restictDownload;
  }

  public SdkCloudSafe() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              UniqueKey = new SdkCloudSafeKey();
              UniqueKey.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Content = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Options = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              DiscardAfter = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I64) {
              LastModified = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              Signature = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              Length = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              SharedUser = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.Bool) {
              WriteAccess = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Bool) {
              RestictDownload = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("SdkCloudSafe");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (UniqueKey != null && __isset.uniqueKey) {
        field.Name = "uniqueKey";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        UniqueKey.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Content != null && __isset.content) {
        field.Name = "content";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Content);
        oprot.WriteFieldEnd();
      }
      if (Options != null && __isset.options) {
        field.Name = "options";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Options);
        oprot.WriteFieldEnd();
      }
      if (__isset.discardAfter) {
        field.Name = "discardAfter";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DiscardAfter);
        oprot.WriteFieldEnd();
      }
      if (__isset.lastModified) {
        field.Name = "lastModified";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(LastModified);
        oprot.WriteFieldEnd();
      }
      if (Signature != null && __isset.signature) {
        field.Name = "signature";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Signature);
        oprot.WriteFieldEnd();
      }
      if (__isset.length) {
        field.Name = "length";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Length);
        oprot.WriteFieldEnd();
      }
      if (SharedUser != null && __isset.sharedUser) {
        field.Name = "sharedUser";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SharedUser);
        oprot.WriteFieldEnd();
      }
      if (__isset.writeAccess) {
        field.Name = "writeAccess";
        field.Type = TType.Bool;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(WriteAccess);
        oprot.WriteFieldEnd();
      }
      if (__isset.restictDownload) {
        field.Name = "restictDownload";
        field.Type = TType.Bool;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(RestictDownload);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("SdkCloudSafe(");
    bool __first = true;
    if (UniqueKey != null && __isset.uniqueKey) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("UniqueKey: ");
      __sb.Append(UniqueKey== null ? "<null>" : UniqueKey.ToString());
    }
    if (Content != null && __isset.content) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Content: ");
      __sb.Append(Content);
    }
    if (Options != null && __isset.options) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Options: ");
      __sb.Append(Options);
    }
    if (__isset.discardAfter) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DiscardAfter: ");
      __sb.Append(DiscardAfter);
    }
    if (__isset.lastModified) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("LastModified: ");
      __sb.Append(LastModified);
    }
    if (Signature != null && __isset.signature) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Signature: ");
      __sb.Append(Signature);
    }
    if (__isset.length) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Length: ");
      __sb.Append(Length);
    }
    if (SharedUser != null && __isset.sharedUser) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SharedUser: ");
      __sb.Append(SharedUser);
    }
    if (__isset.writeAccess) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("WriteAccess: ");
      __sb.Append(WriteAccess);
    }
    if (__isset.restictDownload) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("RestictDownload: ");
      __sb.Append(RestictDownload);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

