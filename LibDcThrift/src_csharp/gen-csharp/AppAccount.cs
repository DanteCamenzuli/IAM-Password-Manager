/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class AppAccount : TBase
{
  private string _name;
  private string _userName;
  private string _tenantName;
  private string _realmName;
  private string _fullQualifiedName;
  private bool _updatePushNotification;
  private bool _usingReverseProxy;
  private string _settingsFileName;

  public string Name
  {
    get
    {
      return _name;
    }
    set
    {
      __isset.name = true;
      this._name = value;
    }
  }

  public string UserName
  {
    get
    {
      return _userName;
    }
    set
    {
      __isset.userName = true;
      this._userName = value;
    }
  }

  public string TenantName
  {
    get
    {
      return _tenantName;
    }
    set
    {
      __isset.tenantName = true;
      this._tenantName = value;
    }
  }

  public string RealmName
  {
    get
    {
      return _realmName;
    }
    set
    {
      __isset.realmName = true;
      this._realmName = value;
    }
  }

  public string FullQualifiedName
  {
    get
    {
      return _fullQualifiedName;
    }
    set
    {
      __isset.fullQualifiedName = true;
      this._fullQualifiedName = value;
    }
  }

  public bool UpdatePushNotification
  {
    get
    {
      return _updatePushNotification;
    }
    set
    {
      __isset.updatePushNotification = true;
      this._updatePushNotification = value;
    }
  }

  public bool UsingReverseProxy
  {
    get
    {
      return _usingReverseProxy;
    }
    set
    {
      __isset.usingReverseProxy = true;
      this._usingReverseProxy = value;
    }
  }

  public string SettingsFileName
  {
    get
    {
      return _settingsFileName;
    }
    set
    {
      __isset.settingsFileName = true;
      this._settingsFileName = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool name;
    public bool userName;
    public bool tenantName;
    public bool realmName;
    public bool fullQualifiedName;
    public bool updatePushNotification;
    public bool usingReverseProxy;
    public bool settingsFileName;
  }

  public AppAccount() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              UserName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              TenantName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              RealmName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              FullQualifiedName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Bool) {
              UpdatePushNotification = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              UsingReverseProxy = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              SettingsFileName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("AppAccount");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (UserName != null && __isset.userName) {
        field.Name = "userName";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UserName);
        oprot.WriteFieldEnd();
      }
      if (TenantName != null && __isset.tenantName) {
        field.Name = "tenantName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TenantName);
        oprot.WriteFieldEnd();
      }
      if (RealmName != null && __isset.realmName) {
        field.Name = "realmName";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(RealmName);
        oprot.WriteFieldEnd();
      }
      if (FullQualifiedName != null && __isset.fullQualifiedName) {
        field.Name = "fullQualifiedName";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(FullQualifiedName);
        oprot.WriteFieldEnd();
      }
      if (__isset.updatePushNotification) {
        field.Name = "updatePushNotification";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(UpdatePushNotification);
        oprot.WriteFieldEnd();
      }
      if (__isset.usingReverseProxy) {
        field.Name = "usingReverseProxy";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(UsingReverseProxy);
        oprot.WriteFieldEnd();
      }
      if (SettingsFileName != null && __isset.settingsFileName) {
        field.Name = "settingsFileName";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SettingsFileName);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("AppAccount(");
    bool __first = true;
    if (Name != null && __isset.name) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Name: ");
      __sb.Append(Name);
    }
    if (UserName != null && __isset.userName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("UserName: ");
      __sb.Append(UserName);
    }
    if (TenantName != null && __isset.tenantName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TenantName: ");
      __sb.Append(TenantName);
    }
    if (RealmName != null && __isset.realmName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("RealmName: ");
      __sb.Append(RealmName);
    }
    if (FullQualifiedName != null && __isset.fullQualifiedName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("FullQualifiedName: ");
      __sb.Append(FullQualifiedName);
    }
    if (__isset.updatePushNotification) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("UpdatePushNotification: ");
      __sb.Append(UpdatePushNotification);
    }
    if (__isset.usingReverseProxy) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("UsingReverseProxy: ");
      __sb.Append(UsingReverseProxy);
    }
    if (SettingsFileName != null && __isset.settingsFileName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SettingsFileName: ");
      __sb.Append(SettingsFileName);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

