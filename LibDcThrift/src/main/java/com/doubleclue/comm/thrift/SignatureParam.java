/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.doubleclue.comm.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-10-21")
public class SignatureParam implements org.apache.thrift.TBase<SignatureParam, SignatureParam._Fields>, java.io.Serializable, Cloneable, Comparable<SignatureParam> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SignatureParam");

  private static final org.apache.thrift.protocol.TField CLIENT_SIGNATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("clientSignature", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField APP_DIGEST_FIELD_DESC = new org.apache.thrift.protocol.TField("appDigest", org.apache.thrift.protocol.TType.STRING, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SignatureParamStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SignatureParamTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer clientSignature; // required
  public @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer appDigest; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CLIENT_SIGNATURE((short)1, "clientSignature"),
    APP_DIGEST((short)2, "appDigest");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLIENT_SIGNATURE
          return CLIENT_SIGNATURE;
        case 2: // APP_DIGEST
          return APP_DIGEST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLIENT_SIGNATURE, new org.apache.thrift.meta_data.FieldMetaData("clientSignature", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    tmpMap.put(_Fields.APP_DIGEST, new org.apache.thrift.meta_data.FieldMetaData("appDigest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SignatureParam.class, metaDataMap);
  }

  public SignatureParam() {
  }

  public SignatureParam(
    java.nio.ByteBuffer clientSignature,
    java.nio.ByteBuffer appDigest)
  {
    this();
    this.clientSignature = org.apache.thrift.TBaseHelper.copyBinary(clientSignature);
    this.appDigest = org.apache.thrift.TBaseHelper.copyBinary(appDigest);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SignatureParam(SignatureParam other) {
    if (other.isSetClientSignature()) {
      this.clientSignature = org.apache.thrift.TBaseHelper.copyBinary(other.clientSignature);
    }
    if (other.isSetAppDigest()) {
      this.appDigest = org.apache.thrift.TBaseHelper.copyBinary(other.appDigest);
    }
  }

  public SignatureParam deepCopy() {
    return new SignatureParam(this);
  }

  @Override
  public void clear() {
    this.clientSignature = null;
    this.appDigest = null;
  }

  public byte[] getClientSignature() {
    setClientSignature(org.apache.thrift.TBaseHelper.rightSize(clientSignature));
    return clientSignature == null ? null : clientSignature.array();
  }

  public java.nio.ByteBuffer bufferForClientSignature() {
    return org.apache.thrift.TBaseHelper.copyBinary(clientSignature);
  }

  public SignatureParam setClientSignature(byte[] clientSignature) {
    this.clientSignature = clientSignature == null ? (java.nio.ByteBuffer)null   : java.nio.ByteBuffer.wrap(clientSignature.clone());
    return this;
  }

  public SignatureParam setClientSignature(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer clientSignature) {
    this.clientSignature = org.apache.thrift.TBaseHelper.copyBinary(clientSignature);
    return this;
  }

  public void unsetClientSignature() {
    this.clientSignature = null;
  }

  /** Returns true if field clientSignature is set (has been assigned a value) and false otherwise */
  public boolean isSetClientSignature() {
    return this.clientSignature != null;
  }

  public void setClientSignatureIsSet(boolean value) {
    if (!value) {
      this.clientSignature = null;
    }
  }

  public byte[] getAppDigest() {
    setAppDigest(org.apache.thrift.TBaseHelper.rightSize(appDigest));
    return appDigest == null ? null : appDigest.array();
  }

  public java.nio.ByteBuffer bufferForAppDigest() {
    return org.apache.thrift.TBaseHelper.copyBinary(appDigest);
  }

  public SignatureParam setAppDigest(byte[] appDigest) {
    this.appDigest = appDigest == null ? (java.nio.ByteBuffer)null   : java.nio.ByteBuffer.wrap(appDigest.clone());
    return this;
  }

  public SignatureParam setAppDigest(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer appDigest) {
    this.appDigest = org.apache.thrift.TBaseHelper.copyBinary(appDigest);
    return this;
  }

  public void unsetAppDigest() {
    this.appDigest = null;
  }

  /** Returns true if field appDigest is set (has been assigned a value) and false otherwise */
  public boolean isSetAppDigest() {
    return this.appDigest != null;
  }

  public void setAppDigestIsSet(boolean value) {
    if (!value) {
      this.appDigest = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case CLIENT_SIGNATURE:
      if (value == null) {
        unsetClientSignature();
      } else {
        if (value instanceof byte[]) {
          setClientSignature((byte[])value);
        } else {
          setClientSignature((java.nio.ByteBuffer)value);
        }
      }
      break;

    case APP_DIGEST:
      if (value == null) {
        unsetAppDigest();
      } else {
        if (value instanceof byte[]) {
          setAppDigest((byte[])value);
        } else {
          setAppDigest((java.nio.ByteBuffer)value);
        }
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CLIENT_SIGNATURE:
      return getClientSignature();

    case APP_DIGEST:
      return getAppDigest();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CLIENT_SIGNATURE:
      return isSetClientSignature();
    case APP_DIGEST:
      return isSetAppDigest();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SignatureParam)
      return this.equals((SignatureParam)that);
    return false;
  }

  public boolean equals(SignatureParam that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_clientSignature = true && this.isSetClientSignature();
    boolean that_present_clientSignature = true && that.isSetClientSignature();
    if (this_present_clientSignature || that_present_clientSignature) {
      if (!(this_present_clientSignature && that_present_clientSignature))
        return false;
      if (!this.clientSignature.equals(that.clientSignature))
        return false;
    }

    boolean this_present_appDigest = true && this.isSetAppDigest();
    boolean that_present_appDigest = true && that.isSetAppDigest();
    if (this_present_appDigest || that_present_appDigest) {
      if (!(this_present_appDigest && that_present_appDigest))
        return false;
      if (!this.appDigest.equals(that.appDigest))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetClientSignature()) ? 131071 : 524287);
    if (isSetClientSignature())
      hashCode = hashCode * 8191 + clientSignature.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppDigest()) ? 131071 : 524287);
    if (isSetAppDigest())
      hashCode = hashCode * 8191 + appDigest.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SignatureParam other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetClientSignature()).compareTo(other.isSetClientSignature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClientSignature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientSignature, other.clientSignature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppDigest()).compareTo(other.isSetAppDigest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppDigest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appDigest, other.appDigest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SignatureParam(");
    boolean first = true;

    sb.append("clientSignature:");
    if (this.clientSignature == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.clientSignature, sb);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appDigest:");
    if (this.appDigest == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.appDigest, sb);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SignatureParamStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SignatureParamStandardScheme getScheme() {
      return new SignatureParamStandardScheme();
    }
  }

  private static class SignatureParamStandardScheme extends org.apache.thrift.scheme.StandardScheme<SignatureParam> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SignatureParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLIENT_SIGNATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clientSignature = iprot.readBinary();
              struct.setClientSignatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_DIGEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appDigest = iprot.readBinary();
              struct.setAppDigestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SignatureParam struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clientSignature != null) {
        oprot.writeFieldBegin(CLIENT_SIGNATURE_FIELD_DESC);
        oprot.writeBinary(struct.clientSignature);
        oprot.writeFieldEnd();
      }
      if (struct.appDigest != null) {
        oprot.writeFieldBegin(APP_DIGEST_FIELD_DESC);
        oprot.writeBinary(struct.appDigest);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SignatureParamTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SignatureParamTupleScheme getScheme() {
      return new SignatureParamTupleScheme();
    }
  }

  private static class SignatureParamTupleScheme extends org.apache.thrift.scheme.TupleScheme<SignatureParam> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SignatureParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetClientSignature()) {
        optionals.set(0);
      }
      if (struct.isSetAppDigest()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetClientSignature()) {
        oprot.writeBinary(struct.clientSignature);
      }
      if (struct.isSetAppDigest()) {
        oprot.writeBinary(struct.appDigest);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SignatureParam struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.clientSignature = iprot.readBinary();
        struct.setClientSignatureIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appDigest = iprot.readBinary();
        struct.setAppDigestIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

