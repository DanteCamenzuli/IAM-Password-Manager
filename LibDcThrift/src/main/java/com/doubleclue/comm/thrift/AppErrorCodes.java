/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.doubleclue.comm.thrift;


@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-10-21")
public enum AppErrorCodes implements org.apache.thrift.TEnum {
  OK(0),
  WRONG_CREDENTIALS(1),
  INVALID_ACTIVATION_CODE(2),
  ACTIVATION_CODE_EXPIRED(3),
  USER_PASSWORD_MAX_RETRIES(4),
  UNKNOWN_CLIENT_TYPE(5),
  UNKNOWN_ARCH_TYPE(6),
  REJECT_RISK(7),
  UPDATE_NECESSARY(8),
  INVALID_USERID(9),
  UNEXPECTED_ERROR(10),
  INVALID_VERSION(11),
  INVALID_PIN(12),
  CSR_SIGNATURE(13),
  CSR_ERROR(14),
  TRANSPORT_ERROR(15),
  USER_DISABLED(16),
  USER_TEMPORARY_DISABLED(17),
  INVALID_DEVICE_NAME(18),
  INVALID_DEVICE_ID(19),
  DEVICE_DISABLED(20),
  INCORRECT_STATE(21),
  INVALID_UDID(22),
  INVALID_CLIENT_SIGNATURE(23),
  NO_TEMPLATE_FOUND(24),
  RESPONSE_MESSAGE_ERROR(25),
  CLIENT_ERROR(26),
  RESPONSE_MESSAGE_INVALID_ID(27),
  INVALID_PASSWORD(28),
  DUPLICATED_DEVICE_NAME(29),
  REST_ADD_MESSAGE_FAILURE(30),
  APP_MSG_RESPONSE_TIMEDOUT(31),
  INVALID_MESSAGE_SIGNATURE(32),
  PROPERTY_NOT_FOUND(33),
  VERSION_UPDATED_REQUIRED(34),
  VERSION_DISABLED(35),
  FCM_PUSHNOTIFICATION(36),
  INVALID_CLOUD_SAFE_SIGNATURE(37),
  CLOUD_SAFE_NOT_FOUND(38),
  LICENCE_EXPIRED(39),
  LICENCE_MAX_USER(40),
  INVALID_DOMAIN_NAME(41),
  DISPATCHER_CONNECTION_TO_DCEM_FAILED(42),
  CONNECTION_TO_LDAP_FAILED(43),
  UNREGISTERED_DCEM(44),
  NO_CONNECTION_TO_DESTINATION_DCEM(45),
  NOT_A_DISPATCHER_PROXY(46),
  DOMAIN_CANNOT_CONNECT_TO_ITSELF(47),
  DOMAIN_HAS_NO_CONFIGURATION(48),
  REVERSE_PROXY_CONNECTION_LIMIT(49),
  INVALID_DEVICE_KEY(50),
  INVALID_OFFLINE_KEY(51),
  USER_HAS_NO_DEVICES(52),
  NO_DISTINCT_USER_NAME(53),
  INVALID_PASSCODE(54),
  PASSCODE_NOT_NUMERIC(55),
  INVALID_AUTH_METHOD(56),
  AUTH_METHOD_NOT_ALLOWED(57),
  NO_AUTH_METHOD_FOUND(58),
  SMS_USER_HAS_NO_MOBILE(59),
  SMS_SEND_EXCEPTION(60),
  SEND_VOICE_EXCEPTION(61),
  INVALID_OTP(62),
  USER_HAS_NO_OTP_TOKENS(63),
  INVALID_TENANT_IDENTIFIER(64),
  USER_HAS_NO_TELEPHONE_OR_MOBILE(65),
  INVALID_CLOUD_SAFE_OWNER(66),
  APP_MSG_IGNORED(67),
  DB_DECRYTION_ERROR(68),
  NO_WRITE_ACCESS(69),
  REVERSE_PROXY_REDIRECTION(70),
  PASSWORD_SAFE_LIMIT_REACHED(71),
  CLOUD_SAFE_LIMIT_REACHED(72),
  PASSWORD_SAFE_NOT_ENABLED(73),
  CLOUD_SAFE_GLOBAL_LIMIT_REACHED(74),
  CLOUD_SAFE_USER_LIMIT_REACHED(75),
  CLOUD_SAFE_USER_EXPIRY_DATE_REACHED(76),
  CLOUD_SAFE_FILE_DECRYPTION(77),
  LICENCE_MAX_USERS_REACHED(78),
  LICENCE_MAX_GLOBAL_USERS_REACHED(79),
  INVALID_FILE_SAFE_OWNER(80),
  CLOUDDATA_OUT_OF_DATE(81),
  CREATE_ACCOUNT_INVALID_CREDENTIALS(82),
  INVALID_AUTH_SESSION_COOKIE(83),
  UNSUPPORTED_METHOD(84),
  ID_WITH_SPECIAL_CHARACTERS(85),
  CLOUD_SAFE_CANNOT_RENAME_SHARED_FILE(86),
  CLOUD_SAFE_CANNOT_DELETE_SHARED_FILE(87);

  private final int value;

  private AppErrorCodes(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static AppErrorCodes findByValue(int value) { 
    switch (value) {
      case 0:
        return OK;
      case 1:
        return WRONG_CREDENTIALS;
      case 2:
        return INVALID_ACTIVATION_CODE;
      case 3:
        return ACTIVATION_CODE_EXPIRED;
      case 4:
        return USER_PASSWORD_MAX_RETRIES;
      case 5:
        return UNKNOWN_CLIENT_TYPE;
      case 6:
        return UNKNOWN_ARCH_TYPE;
      case 7:
        return REJECT_RISK;
      case 8:
        return UPDATE_NECESSARY;
      case 9:
        return INVALID_USERID;
      case 10:
        return UNEXPECTED_ERROR;
      case 11:
        return INVALID_VERSION;
      case 12:
        return INVALID_PIN;
      case 13:
        return CSR_SIGNATURE;
      case 14:
        return CSR_ERROR;
      case 15:
        return TRANSPORT_ERROR;
      case 16:
        return USER_DISABLED;
      case 17:
        return USER_TEMPORARY_DISABLED;
      case 18:
        return INVALID_DEVICE_NAME;
      case 19:
        return INVALID_DEVICE_ID;
      case 20:
        return DEVICE_DISABLED;
      case 21:
        return INCORRECT_STATE;
      case 22:
        return INVALID_UDID;
      case 23:
        return INVALID_CLIENT_SIGNATURE;
      case 24:
        return NO_TEMPLATE_FOUND;
      case 25:
        return RESPONSE_MESSAGE_ERROR;
      case 26:
        return CLIENT_ERROR;
      case 27:
        return RESPONSE_MESSAGE_INVALID_ID;
      case 28:
        return INVALID_PASSWORD;
      case 29:
        return DUPLICATED_DEVICE_NAME;
      case 30:
        return REST_ADD_MESSAGE_FAILURE;
      case 31:
        return APP_MSG_RESPONSE_TIMEDOUT;
      case 32:
        return INVALID_MESSAGE_SIGNATURE;
      case 33:
        return PROPERTY_NOT_FOUND;
      case 34:
        return VERSION_UPDATED_REQUIRED;
      case 35:
        return VERSION_DISABLED;
      case 36:
        return FCM_PUSHNOTIFICATION;
      case 37:
        return INVALID_CLOUD_SAFE_SIGNATURE;
      case 38:
        return CLOUD_SAFE_NOT_FOUND;
      case 39:
        return LICENCE_EXPIRED;
      case 40:
        return LICENCE_MAX_USER;
      case 41:
        return INVALID_DOMAIN_NAME;
      case 42:
        return DISPATCHER_CONNECTION_TO_DCEM_FAILED;
      case 43:
        return CONNECTION_TO_LDAP_FAILED;
      case 44:
        return UNREGISTERED_DCEM;
      case 45:
        return NO_CONNECTION_TO_DESTINATION_DCEM;
      case 46:
        return NOT_A_DISPATCHER_PROXY;
      case 47:
        return DOMAIN_CANNOT_CONNECT_TO_ITSELF;
      case 48:
        return DOMAIN_HAS_NO_CONFIGURATION;
      case 49:
        return REVERSE_PROXY_CONNECTION_LIMIT;
      case 50:
        return INVALID_DEVICE_KEY;
      case 51:
        return INVALID_OFFLINE_KEY;
      case 52:
        return USER_HAS_NO_DEVICES;
      case 53:
        return NO_DISTINCT_USER_NAME;
      case 54:
        return INVALID_PASSCODE;
      case 55:
        return PASSCODE_NOT_NUMERIC;
      case 56:
        return INVALID_AUTH_METHOD;
      case 57:
        return AUTH_METHOD_NOT_ALLOWED;
      case 58:
        return NO_AUTH_METHOD_FOUND;
      case 59:
        return SMS_USER_HAS_NO_MOBILE;
      case 60:
        return SMS_SEND_EXCEPTION;
      case 61:
        return SEND_VOICE_EXCEPTION;
      case 62:
        return INVALID_OTP;
      case 63:
        return USER_HAS_NO_OTP_TOKENS;
      case 64:
        return INVALID_TENANT_IDENTIFIER;
      case 65:
        return USER_HAS_NO_TELEPHONE_OR_MOBILE;
      case 66:
        return INVALID_CLOUD_SAFE_OWNER;
      case 67:
        return APP_MSG_IGNORED;
      case 68:
        return DB_DECRYTION_ERROR;
      case 69:
        return NO_WRITE_ACCESS;
      case 70:
        return REVERSE_PROXY_REDIRECTION;
      case 71:
        return PASSWORD_SAFE_LIMIT_REACHED;
      case 72:
        return CLOUD_SAFE_LIMIT_REACHED;
      case 73:
        return PASSWORD_SAFE_NOT_ENABLED;
      case 74:
        return CLOUD_SAFE_GLOBAL_LIMIT_REACHED;
      case 75:
        return CLOUD_SAFE_USER_LIMIT_REACHED;
      case 76:
        return CLOUD_SAFE_USER_EXPIRY_DATE_REACHED;
      case 77:
        return CLOUD_SAFE_FILE_DECRYPTION;
      case 78:
        return LICENCE_MAX_USERS_REACHED;
      case 79:
        return LICENCE_MAX_GLOBAL_USERS_REACHED;
      case 80:
        return INVALID_FILE_SAFE_OWNER;
      case 81:
        return CLOUDDATA_OUT_OF_DATE;
      case 82:
        return CREATE_ACCOUNT_INVALID_CREDENTIALS;
      case 83:
        return INVALID_AUTH_SESSION_COOKIE;
      case 84:
        return UNSUPPORTED_METHOD;
      case 85:
        return ID_WITH_SPECIAL_CHARACTERS;
      case 86:
        return CLOUD_SAFE_CANNOT_RENAME_SHARED_FILE;
      case 87:
        return CLOUD_SAFE_CANNOT_DELETE_SHARED_FILE;
      default:
        return null;
    }
  }
}
